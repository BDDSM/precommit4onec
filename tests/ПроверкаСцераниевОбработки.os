#Использовать asserts
#Использовать logos
#Использовать tempfiles

Перем юТест;
Перем Лог;
Перем МенеджерВременныхФайлов;

// Основная точка входа
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт

    юТест = ЮнитТестирование;

    ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоСценарийПроверкиДублейПроцедурВызываетИсключение");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоСценарийПроверкиДублейПроцедурОбработаетФайл");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоСценарийПроверкиДублейПроцедурНеОбработаетНесуществующийФайл");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоСценарийПроверкиДублейПроцедурНеОбработаетНеИсходник");
	
	Возврат ВсеТесты;
	
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	
	ВремТестер = Новый Тестер;
	Лог = Логирование.ПолучитьЛог(ВремТестер.ИмяЛога());
	
	ВключитьПоказОтладки();

	МенеджерВременныхФайлов = Новый МенеджерВременныхФайлов;
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	МенеджерВременныхФайлов.Удалить();
	МенеджерВременныхФайлов = Неопределено;

КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоСценарийПроверкиДублейПроцедурВызываетИсключение() Экспорт
	
	ОбъектСценария	= ПолучитьСценарийОбработкиПроверкаДублейПроцедурИФункций();
	Файл			= Новый Файл(ОбъединитьПути(КаталогТестовыхФикстур(), "ПроверкаДублейПроцедурНегативныйТест.bsl"));
	
	ВызываетсяИсключениеСТекстом(ОбъектСценария, Файл, "обнаружены неуникальные имена методов");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоСценарийПроверкиДублейПроцедурОбработаетФайл() Экспорт
	
	Файл			= Новый Файл(ОбъединитьПути(КаталогТестовыхФикстур(), "ПроверкаДублейПроцедурПоложительныйТест.bsl"));
	ОбъектСценария	= ПолучитьСценарийОбработкиПроверкаДублейПроцедурИФункций();
	Результат		= ОбъектСценария.ОбработатьФайл(Файл, Файл.Путь, ПолучитьДополнительныеНастройки());
	
	Ожидаем.Что(Результат, Истина).ЭтоИстина();

КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоСценарийПроверкиДублейПроцедурНеОбработаетНесуществующийФайл() Экспорт
	
	Файл			= Новый Файл(ПолучитьИмяВременногоФайла("bsl"));
	ОбъектСценария	= ПолучитьСценарийОбработкиПроверкаДублейПроцедурИФункций();
	Результат		= ОбъектСценария.ОбработатьФайл(Файл, Файл.Путь, ПолучитьДополнительныеНастройки());
	
	Ожидаем.Что(Результат, Истина).ЭтоЛожь();

КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоСценарийПроверкиДублейПроцедурНеОбработаетНеИсходник() Экспорт
	
	Файл			= Новый Файл(МенеджерВременныхФайлов.СоздатьФайл("xml"));
	ОбъектСценария	= ПолучитьСценарийОбработкиПроверкаДублейПроцедурИФункций();
	Результат		= ОбъектСценария.ОбработатьФайл(Файл, Файл.Путь, ПолучитьДополнительныеНастройки());
	
	Ожидаем.Что(Результат, Истина).ЭтоЛожь();

КонецПроцедуры

Процедура ВызываетсяИсключениеСТекстом(ОбъектСценария, Файл, ТекстИсключения)
	
	ДополнительныеНастройки	= ПолучитьДополнительныеНастройки();
	ПараметрыМетода			= Новый Массив;
	
	ПараметрыМетода.Добавить(Файл);
	ПараметрыМетода.Добавить(Файл.Путь);
	ПараметрыМетода.Добавить(ДополнительныеНастройки);

	Ожидаем.Что(ОбъектСценария).Метод("ОбработатьФайл", ПараметрыМетода).ВыбрасываетИсключение(ТекстИсключения);

КонецПроцедуры

Функция ПолучитьСценарийОбработкиПроверкаДублейПроцедурИФункций()
	
	Сценарий		= ОбъединитьПути(КаталогИсходников(), "src", "СценарииОбработки", "ПроверкаДублейПроцедурИФункций.os");
	ОбъектСценария	= ЗагрузитьСценарий(Сценарий);
	
	Возврат ОбъектСценария;

КонецФункции

Процедура ВключитьПоказОтладки()
	Лог.УстановитьУровень(УровниЛога.Отладка);
КонецПроцедуры

Процедура ВыключитьПоказОтладки()
	Лог.УстановитьУровень(УровниЛога.Информация);
КонецПроцедуры

Функция КаталогТестовыхФикстур() 
	Возврат ОбъединитьПути(КаталогИсходников(), "fixtures");
КонецФункции

Функция КаталогИсходников() 
	Возврат ОбъединитьПути(ТекущийСценарий().Каталог, "..");
КонецФункции

Функция ПолучитьДополнительныеНастройки()
	
	УправлениеНастройками	= Новый НастройкиРепозитория(ТекущийКаталог());
	ДополнительныеНастройки	= Новый Структура("Лог, УправлениеНастройками", Лог, УправлениеНастройками);
	
	Возврат ДополнительныеНастройки;

КонецФункции
