#Использовать asserts
#Использовать logos
#Использовать tempfiles
#Использовать "../src"

Перем юТест;
Перем Лог;
Перем МенеджерВременныхФайлов;

// Основная точка входа
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ПередЗапускомТестов();

	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	ВсеТесты.Добавить("Тест_СброситьНастройкиРепозитория");
	ВсеТесты.Добавить("Тест_СброситьГлобальныеНастройки");
	ВсеТесты.Добавить("Тест_ПолучитьСтандартнуюСтруктуруНастроек");

	Возврат ВсеТесты;
	
КонецФункции

#Область ПередПослеТеста

Процедура ПередЗапускомТестов()

	МенеджерПриложения.Инициализировать(ПараметрыПриложения);

	Попытка
		ВремТестер = Новый Тестер;
		Лог = Логирование.ПолучитьЛог(ВремТестер.ИмяЛога());
	Исключение
		Лог = Логирование.ПолучитьЛог("Test");
	КонецПопытки;

КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
	ВключитьПоказОтладки();
	
	МенеджерВременныхФайлов = Новый МенеджерВременныхФайлов;
	МенеджерНастроек.СбросСостоянияМенеджера();

КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	МенеджерВременныхФайлов.Удалить();
	МенеджерВременныхФайлов = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область Тесты

Процедура Тест_СброситьНастройкиРепозитория() Экспорт

	Каталог = СоздатьТестовыйКаталог("v8configПроекты.json");

	// Сброс по проектно
	МенеджерНастроек.НастройкиРепозитория(Каталог, Ложь);

	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Не найден проект").Содержит("configuration");
	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Не найден проект").Содержит("ext/extension1");

	РедакторНастроек.СброситьНастройкиРепозитория(Истина, "ext\extension1");

	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Проект не удален").НЕ_().Содержит("ext/extension1");
	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Не найден проект").Содержит("configuration");

	РедакторНастроек.СброситьНастройкиРепозитория(Истина, "configuration\extension1");

	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Удален лишний репозиторий").Содержит("configuration");

	// Перезагрузим настройки
	МенеджерНастроек.НастройкиРепозитория(Каталог, Ложь);
	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Настройки не сохранены").НЕ_().Содержит("ext/extension1");
	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Настройки сохранены не корректно").Содержит("configuration");

	// Сброс всех подпроектов

	Каталог = СоздатьТестовыйКаталог("v8configПроекты.json");

	МенеджерНастроек.НастройкиРепозитория(Каталог, Ложь);
	РедакторНастроек.СброситьНастройкиРепозитория(Истина);
	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Не выполнен сброс настроек подпроектов").ИмеетДлину(0);
	Ожидаем.Что(МенеджерНастроек.ЗначениеНастройки("ОтключенныеСценарии"), "Не корректны настройки").ИмеетДлину(1);

	// Перезагрузим настройки
	МенеджерНастроек.НастройкиРепозитория(Каталог, Ложь);
	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Настройки не сохранены").ИмеетДлину(0);
	Ожидаем.Что(МенеджерНастроек.ЗначениеНастройки("ОтключенныеСценарии"), "Не корректны настройки после загрузки").ИмеетДлину(1);

	// Полный сброс настроек прекоммит

	Каталог = СоздатьТестовыйКаталог("v8configПроекты.json");

	МенеджерНастроек.НастройкиРепозитория(Каталог, Ложь);
	РедакторНастроек.СброситьНастройкиРепозитория();
	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Не выполнен сброс настроек").ИмеетДлину(0);
	Ожидаем.Что(МенеджерНастроек.ЗначениеНастройки("ОтключенныеСценарии"), "Не корректны настройки").НЕ_().Заполнено();

	// Перезагрузим настройки
	МенеджерНастроек.НастройкиРепозитория(Каталог, Ложь);
	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Настройки не сохранены").ИмеетДлину(0);
	Ожидаем.Что(МенеджерНастроек.ЗначениеНастройки("ОтключенныеСценарии"), "Не корректны настройки после загрузки").НЕ_().Заполнено();
	Ожидаем.Что(МенеджерНастроек.Настройки().НастройкиПриложения(МенеджерНастроек.КлючНастройкиPrecommit())).НЕ_().Заполнено();
КонецПроцедуры

Процедура Тест_СброситьГлобальныеНастройки() Экспорт

	Каталог = СоздатьТестовыйКаталог("v8configПроекты.json");

	МенеджерНастроек.УстановитьКаталогГлобальныхНастроек(Каталог);
	МенеджерНастроек.ГлобальныеНастройки();

	РедакторНастроек.СброситьГлобальныеНастройки();

	МенеджерНастроек.НастройкиРепозитория(Каталог, Ложь);

	Ожидаем.Что(МенеджерНастроек.ПроектыКонфигурации(), "Не удалены подпроекты").НЕ_().Заполнено();
	Ожидаем.Что(МенеджерНастроек.ЗначениеНастройки("ОтключенныеСценарии"), "Не сброшены ОтключенныеСценарии").НЕ_().Заполнено();
	
	Для Каждого ИмяСценария Из СценарииОбработки.ГлобальныеСценарии() Цикл

		Ожидаем.Что(МенеджерНастроек.ЗначениеНастройки("ГлобальныеСценарии"), "Не сброшены ГлобальныеСценарии").Содержит(ИмяСценария);

	КонецЦикла;

КонецПроцедуры

Процедура Тест_ПолучитьСтандартнуюСтруктуруНастроек() Экспорт

	СтандартныеНастройки = РедакторНастроек.ПолучитьСтандартнуюСтруктуруНастроек();

	Ожидаем.Что(СтандартныеНастройки)
	.ИмеетТип("Соответствие")
	.ИмеетДлину(5);

	Эталон = Новый Соответствие();
	
	Эталон.Вставить("ИспользоватьСценарииРепозитория", "Булево");
	Эталон.Вставить("КаталогЛокальныхСценариев", "Строка");
	Эталон.Вставить("ГлобальныеСценарии", "Массив");
	Эталон.Вставить("ОтключенныеСценарии", "Массив");
	Эталон.Вставить("НастройкиСценариев", "Соответствие");

	Для Каждого Элемент Из  Эталон Цикл

		Ожидаем.Что(СтандартныеНастройки[Элемент.Ключ], "Не верное свойство " + Элемент.Ключ).ИмеетТип(Элемент.Значение);

	КонецЦикла;

КонецПроцедуры

#КонецОбласти


#Область Служебные

Процедура ВключитьПоказОтладки()
	Лог.УстановитьУровень(УровниЛога.Отладка);
КонецПроцедуры

Процедура ВыключитьПоказОтладки()
	Лог.УстановитьУровень(УровниЛога.Информация);
КонецПроцедуры

Функция СоздатьТестовыйКаталог(ИмяФикстуры)
	
	Каталог = МенеджерВременныхФайлов.СоздатьКаталог();
	
	КаталогФикстур = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "Настройки");
	Фикстура = ОбъединитьПути(КаталогФикстур, ИмяФикстуры);
	
	КопироватьФайл(Фикстура, ОбъединитьПути(Каталог, "v8config.json"));
	
	Возврат Каталог;

КонецФункции

#КонецОбласти
